{"tags":[{"name":"underscore","permalink":"http://yoursite.com/tags/underscore/","url":"\\async\\tags\\underscore.json","count":6}],"categories":[],"url":"\\async\\posts\\2017\\06\\06\\underscore-Chaining.json","date":1496680326000,"path":{"year":2017,"month":6,"day":6,"name":"underscore-Chaining"},"title":"underscore-Chaining","permalink":"http://yoursite.com/2017/06/06/underscore-Chaining/","content":"<h3 id=\"Chaining\"><a href=\"#Chaining\" class=\"headerlink\" title=\"Chaining\"></a>Chaining</h3><ul>\n<li><code>chain()</code>能通过包装对象来使对象能够进行链式调用。</li>\n<li>链式调用每一步返回的都是包装对象，可通过调用value()获得最终结果。</li>\n<li>例子：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//如一操作： </div><div class=\"line\">_.filter(_.map([1, 4, 9, 16, 25], Math.sqrt), x =&gt; x % 2 === 1); // [1, 3, 5] </div><div class=\"line\">//将上述操作写成链式调用： </div><div class=\"line\">_.chain([1, 4, 9, 16, 25]) </div><div class=\"line\"> .map(Math.sqrt)           //[1,2,3,4,5] </div><div class=\"line\"> .filter(x =&gt; x % 2 === 1) //[1,3,5] </div><div class=\"line\"> .value(); //[1,3,5] </div><div class=\"line\">//因为每一步返回的都是包装对象，所以最后一步的结果需要调用value()获得最终结果。</div></pre></td></tr></table></figure></li>\n</ul>\n"}