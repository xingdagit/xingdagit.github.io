{"tags":[{"name":"underscore","permalink":"http://yoursite.com/tags/underscore/","url":"\\async\\tags\\underscore.json","count":3}],"categories":[],"url":"\\async\\posts\\2017\\06\\05\\underscore-Arrays.json","date":1496672082000,"path":{"year":2017,"month":6,"day":5,"name":"underscore-Arrays"},"title":"underscore-Arrays","permalink":"http://yoursite.com/2017/06/05/underscore-Arrays/","content":"<h3 id=\"Arrays\"><a href=\"#Arrays\" class=\"headerlink\" title=\"Arrays\"></a>Arrays</h3><ul>\n<li>underscore为Array提供了许多工具类方法，可以更方便快捷地操作Array。</li>\n</ul>\n<p>1.first() / last()</p>\n<ul>\n<li><p>分别取第一个和最后一个元素：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">  var arr = [2, 4, 6, 8];</div><div class=\"line\">  _.first(arr); // 2</div><div class=\"line\">  _.last(arr); // 8</div><div class=\"line\">  ```\t</div><div class=\"line\">\t</div><div class=\"line\">2.flatten()</div><div class=\"line\">  - `flatten()`接收一个Array(无论里面再嵌套了多少个Array)，`flatten()`最后都把它们变成一个`一维数组`：</div><div class=\"line\">    `_.flatten([1, [2], [3, [[4], [5]]]]); // [1, 2, 3, 4, 5]`</div><div class=\"line\">\t</div><div class=\"line\">3.zip() / unzip()</div><div class=\"line\">  - `zip()`把两个或多个数组的所有元素按索引对齐，然后按索引合并成新数组。</div><div class=\"line\">    例如，有一个Array保存了名字，另一个Array保存了分数，现在，要把名字和分数给对上，就可以用`zip()`轻松实现：</div></pre></td></tr></table></figure>\n<p>var names = [‘Adam’, ‘Lisa’, ‘Bart’];<br>var scores = [85, 92, 59];<br>_.zip(names, scores); // 返回[[‘Adam’, 85], [‘Lisa’, 92], [‘Bart’, 59]]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- `unzip()`则是反过来：</div></pre></td></tr></table></figure>\n<p>var namesAndScores = [[‘Adam’, 85], [‘Lisa’, 92], [‘Bart’, 59]];<br>_.unzip(namesAndScores); // 返回[[‘Adam’, ‘Lisa’, ‘Bart’], [85, 92, 59]]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">4.object()</div><div class=\"line\">  - `object()`与zip()作用类似，区别是合并返回的是Object：</div></pre></td></tr></table></figure>\n<p>var names = [‘Adam’, ‘Lisa’, ‘Bart’];var scores = [85, 92, 59];<br>_.object(names, scores);// 返回{Adam: 85, Lisa: 92, Bart: 59}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">5.range()</div><div class=\"line\">  - `range()`可快速生成一个序列，不再需要用for循环实现了：</div></pre></td></tr></table></figure>\n<p>// 从0到10:<br><em>.range(10); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]<br>// 从1到11：\n</em>.range(1, 11); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>// 从0到30，步长5:<br><em>.range(0, 30, 5); // [0, 5, 10, 15, 20, 25]<br>// 从0到-10，步长-1:\n</em>.range(0, -10, -1); // [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]<br>```</p>\n</li>\n</ul>\n<ul>\n<li>更多完整<code>Arrays</code>函数请参考underscore的文档：<a href=\"http://underscorejs.org/#arrays\" target=\"_blank\" rel=\"external\">http://underscorejs.org/#arrays</a></li>\n</ul>\n"}