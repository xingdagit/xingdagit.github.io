{"tags":[{"name":"设计模式","permalink":"http://yoursite.com/tags/设计模式/","url":"\\async\\tags\\设计模式.json","count":10}],"categories":[],"url":"\\async\\posts\\2017\\06\\21\\GOF设计模式简介.json","date":1498014579000,"path":{"year":2017,"month":6,"day":21,"name":"GOF设计模式简介"},"title":"GOF设计模式简介","permalink":"http://yoursite.com/2017/06/21/GOF设计模式简介/","content":"<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3><ul>\n<li>设计模式是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。<br>使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。</li>\n<li>设计模式一般有如下几个基本要素：模式名称、问题、目的、解决方案、效果、实例代码和相关设计模式，<br>其中的关键元素包括模式名称、问题、解决方案和效果。</li>\n</ul>\n<h3 id=\"设计模式分类\"><a href=\"#设计模式分类\" class=\"headerlink\" title=\"设计模式分类\"></a>设计模式分类</h3><p>设计模式一般有两种分类方式：<br>1.根据其目的(模式用来做什么)可分为创建型(Creational)、结构型(Structural)和行为型(Behavioral)三种：</p>\n<ul>\n<li>创建型模式主要用于<code>创建对象</code>，GOF提供了<code>5种</code>创建型模式：<br>1）工厂方法模式(Factory Method)<br>2）抽象工厂模式(Abstract Factory)<br>3）建造者模式(Builder)<br>4）原型模式(Prototype)<br>5）单例模式(Singleton)</li>\n<li>结构型模式主要用于<code>处理类或对象的组合</code>，GOF提供了<code>7种</code>结构型模式：<br>1）适配器模式(Adapter)<br>2）桥接模式(Bridge)<br>3）组合模式(Composite)<br>4）装饰模式(Decorator)<br>5）外观模式(Facade)<br>6）享元模式(Flyweight)<br>7）代理模式(Proxy)</li>\n<li>行为型模式主要用于<code>描述对类或对象怎样交互和怎样分配职责</code>，GOF提供了<code>11种</code>行为型模式：<br>1）职责链模式(Chain of Responsibility)<br>2）命令模式(Command)<br>3）解释器模式(Interpreter)<br>4）迭代器模式(Iterator)<br>5）中介者模式(Mediator)<br>6）备忘录模式(Memento)<br>7）观察者模式(Observer)<br>8）状态模式(State)<br>9）策略模式(Strategy)<br>10）模版方法模式(Template Method)<br>11）访问者模式(Visitor)</li>\n</ul>\n<p>2.根据范围，即模式主要是用于处理类之间关系还是处理对象之间的关系，可分为<code>类模式</code>和<code>对象模式</code>两种：<br>1）<code>类模式</code>处理类和子类之间的关系，这些关系通过继承建立，在编译时刻就被确定下来，是属于静态的。<br>2）<code>对象模式</code>处理对象间的关系，这些关系在运行时刻变化，更具动态性。<br>注意：根据”合成复用原则”，在系统设计时，我们应尽量用<code>关联关系</code>来取代<code>继承关系</code>，因此大部分模式都属于<code>对象模式</code>，纯的类模式很少。</p>\n<h3 id=\"GOF-23种设计模式\"><a href=\"#GOF-23种设计模式\" class=\"headerlink\" title=\"GOF 23种设计模式\"></a>GOF 23种设计模式</h3><ul>\n<li>GOF(4个人)最先将模式的概念引入软件工程领域，在GOF的经典著作《设计模式: 可复用面向对象软件的基础》一书中一共描述了23种设计模式，旨在用模式来统一沟通面向对象方法在分析、设计和实现间的鸿沟。</li>\n<li>GOF 23种设计模式一览表</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">范围/目的</th>\n<th style=\"text-align:center\">创建型模式</th>\n<th style=\"text-align:center\">结构型模式</th>\n<th style=\"text-align:center\">行为型模式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">类模式</td>\n<td style=\"text-align:center\">工厂方法模式</td>\n<td style=\"text-align:center\">(类)适配器模式</td>\n<td style=\"text-align:center\">解释器模式 <br> 模版方式模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">对象模式</td>\n<td style=\"text-align:center\">抽象工厂模式<br>建造者模式<br>原型模式<br>单例模式</td>\n<td style=\"text-align:center\">(对象)适配器模式<br>桥接模式<br>组合模式<br>装饰模式<br>外观模式<br>享元模式<br>代理模式</td>\n<td style=\"text-align:center\">职业链模式<br>命令模式<br>迭代器模式<br>中介者模式<br>备忘录模式<br>观察者模式<br>状态模式<br>策略模式<br>访问者模式</td>\n</tr>\n</tbody>\n</table>\n"}