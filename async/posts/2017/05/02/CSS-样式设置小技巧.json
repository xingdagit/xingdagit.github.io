{"tags":[{"name":"CSS","permalink":"http://yoursite.com/tags/CSS/","url":"\\async\\tags\\CSS.json","count":4}],"categories":[],"url":"\\async\\posts\\2017\\05\\02\\CSS-样式设置小技巧.json","date":1493719385000,"path":{"year":2017,"month":5,"day":2,"name":"CSS-样式设置小技巧"},"title":"CSS-样式设置小技巧","permalink":"http://yoursite.com/2017/05/02/CSS-样式设置小技巧/","content":"<h2 id=\"1-水平居中设置-行内元素\"><a href=\"#1-水平居中设置-行内元素\" class=\"headerlink\" title=\"1. 水平居中设置-行内元素\"></a>1. 水平居中设置-行内元素</h2><ul>\n<li>通过给其父元素设置<code>text-align:center</code>来实现水平居中</li>\n<li>实例：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">  .txtCenter&#123;  text-align:center;  &#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">//&lt;div&gt;为后面文本的父元素</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">  &lt;div class=&quot;txtCenter&quot;&gt;我想要在父容器中水平居中显示。&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-水平居中设置-定宽块状元素\"><a href=\"#2-水平居中设置-定宽块状元素\" class=\"headerlink\" title=\"2. 水平居中设置-定宽块状元素\"></a>2. 水平居中设置-定宽块状元素</h2><ul>\n<li>定宽块状元素：块状元素的宽度width为固定值</li>\n<li>通过设置“左右margin”值为“auto”来实现水平居中</li>\n<li>实例：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*设置 div 这个块状元素水平居中*/</div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">div&#123;</div><div class=\"line\">    width:200px;/*定宽*//*定宽块状元素的条件*/</div><div class=\"line\">    margin:20px auto;/* margin-left 与 margin-right 设置为 auto *//*上下margin可随意设置*/</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-水平居中总结-不定宽块状元素方法（一）\"><a href=\"#3-水平居中总结-不定宽块状元素方法（一）\" class=\"headerlink\" title=\"3. 水平居中总结-不定宽块状元素方法（一）\"></a>3. 水平居中总结-不定宽块状元素方法（一）</h2><ul>\n<li>不定宽块状元素：块状元素的宽度width不固定</li>\n<li>不定宽度的块状元素有三种方法居中：</li>\n</ul>\n<ol>\n<li><p>加入 table 标签方法：</p>\n<ul>\n<li>利用table标签的长度自适应性—即不定义其长度也不默认父元素body的长度（table其长度根据其内文本长度决定），即将其当做一个定宽度块元素，利用定宽度块状居中的margin的方法来使其水平居中</li>\n<li>步骤：先在需要设置居中的元素外面加入一个 table 标签 ( 包括<table> <tbody>、<tr>、<td> )；然后为这个 table 设置“左右 margin 居中”（这个和定宽块状元素的方法一样）</td></tr></tbody></table></li>\n</ul>\n</li>\n<li><p>设为行内元素方法：</p>\n<ul>\n<li>先改变元素的display类型为行内元素： <code>display:inline;</code></li>\n<li>然后像行内元素一样设置： 给其父元素设置<code>text-align:center</code></li>\n<li>相比第一种方法优势是不用增加无语义标签，但也存在着一些问题：它将块状元素的 display 类型改为 inline，变成了行内元素，所以少了一些功能，比如设定长度值</li>\n</ul>\n</li>\n<li><p>设置浮动和相对定位方法： </p>\n<ul>\n<li>方法：通过给父元素设置 float，然后给父元素设置<code>position:relative 和 left:50%</code>，子元素设置 <code>position:relative 和 left: -50%</code>来实现水平居中。</li>\n<li>理解：<ol>\n<li>把父元素浮动到左边,同时向右偏移50%,相当于把父元素的左边缘对齐到整行的中间</li>\n<li>把子元素向左偏移50%,这个50%是父元素的50%,而此时父元素宽度刚好就等于子元素宽度,子元素的中间平分线刚好和父元素的左边缘也就是屏幕中心线重合，从而实现了看起来居中的效果</li>\n<li>其实父元素还是不居中的，就是里面的可见元素居中了</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"4-垂直居中-父元素高度确定的单行文本\"><a href=\"#4-垂直居中-父元素高度确定的单行文本\" class=\"headerlink\" title=\"4. 垂直居中-父元素高度确定的单行文本\"></a>4. 垂直居中-父元素高度确定的单行文本</h2><ul>\n<li>通过设置父元素的 height 和 line-height 高度一致来实现垂直居中</li>\n<li>小知识：line-height 与 font-size 的计算值之差，在CSS中成为“行间距”。它分为上下两半，分别表示一个文本行内容的顶部和底部。</li>\n<li>文字行高与块高一致带来了一个弊端：当文字内容的长度大于块的宽时，就有内容脱离了块</li>\n</ul>\n<h2 id=\"5-垂直居中-父元素高度确定的多行文本\"><a href=\"#5-垂直居中-父元素高度确定的多行文本\" class=\"headerlink\" title=\"5. 垂直居中-父元素高度确定的多行文本\"></a>5. 垂直居中-父元素高度确定的多行文本</h2><ul>\n<li>父元素高度确定的多行文本、图片等的竖直居中的方法有两种：</li>\n</ul>\n<ol>\n<li><p>在需要设置垂直居中的元素外面加入 table 标签 (包括tbody、tr、td)标签，同时设置 <code>vertical-align：middle；</code>(因<code>&lt;td&gt;</code>标签默认情况下就默认设置了 vertical-align 为 middle，所以也不需要显式地设置了)；<br>vertical-align属性：用于竖直居中，父元素设置此样式时，对inline-block类型的子元素都有用。</p>\n</li>\n<li><p>在 chrome、firefox 及 IE8以上的浏览器下可以设置块级元素的display为table-cell（设置为表格单元显示），并设置 <code>vertical-align：middle；</code>；<br>好处是不用添加多余的无意义的标，但注意 IE6、7 并不支持这个样式, 兼容性比较差</p>\n</li>\n</ol>\n<h2 id=\"6-隐性改变display类型\"><a href=\"#6-隐性改变display类型\" class=\"headerlink\" title=\"6. 隐性改变display类型\"></a>6. 隐性改变display类型</h2><ul>\n<li>有一个有趣的现象：当对元素（display:none 除外）设置以下两句之一：<ol>\n<li><code>position : absolute</code></li>\n<li><code>float : left 或 float:right</code><br>元素的display显示类型就会自动变为以 <code>display:inline-block</code>（内联块状元素）的方式显示；<br>因此也可以设置元素的 width 和 height 了，且默认宽度不占满父元素</li>\n</ol>\n</li>\n</ul>\n"}