{"tags":[{"name":"CSS","permalink":"http://yoursite.com/tags/CSS/","url":"\\async\\tags\\CSS.json","count":3}],"categories":[],"url":"\\async\\posts\\2017\\04\\24\\CSS-布局.json","date":1493028176000,"path":{"year":2017,"month":4,"day":24,"name":"CSS-布局"},"title":"CSS-布局","permalink":"http://yoursite.com/2017/04/24/CSS-布局/","content":"<h2 id=\"布局模型是建立在盒模型的基础之上\"><a href=\"#布局模型是建立在盒模型的基础之上\" class=\"headerlink\" title=\"布局模型是建立在盒模型的基础之上\"></a>布局模型是建立在盒模型的基础之上</h2><h2 id=\"1-一列居中布局\"><a href=\"#1-一列居中布局\" class=\"headerlink\" title=\"1. 一列居中布局\"></a>1. 一列居中布局</h2><ul>\n<li>实现步骤：<ol>\n<li>用一个包裹层(id=wrap)包住所有子层</li>\n<li>各个子层级的宽度设为100%(继承父层的宽度)</li>\n<li>再把wrap包裹层的margin设为<code>{margin: 0 auto;}</code> (上下值任意，但左右值必为auto)</li>\n<li>设置width 为某个定值(如width:80%)，但不能为100%或者任何px值</li>\n</ol>\n</li>\n<li>若设置float值 或 <code>position：absolute/fixed</code> 则取消居中了</li>\n<li>auto：根据浏览器宽度自动设置两边的外边距</li>\n</ul>\n<h2 id=\"2-横向多列布局\"><a href=\"#2-横向多列布局\" class=\"headerlink\" title=\"2. 横向多列布局\"></a>2. 横向多列布局</h2><ul>\n<li>使用<code>position：absolute</code> 实现</li>\n<li>常用于一列固定宽度，另一列宽度自适应</li>\n<li>绝对定位元素 在 相对定位元素 的里面（以相对定位元素为基准）：<ul>\n<li>relative：父元素使用相对定位(外层)</li>\n<li>absolute：自适应宽度元素使用绝对定位(里层)</li>\n</ul>\n</li>\n<li>固定宽度列的高度 一定要大于 自适应宽度列的高度</li>\n</ul>\n"}