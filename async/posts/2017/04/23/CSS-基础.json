{"tags":[{"name":"基础","permalink":"http://yoursite.com/tags/基础/","url":"\\async\\tags\\基础.json","count":4},{"name":"CSS","permalink":"http://yoursite.com/tags/CSS/","url":"\\async\\tags\\CSS.json","count":1}],"categories":[],"url":"\\async\\posts\\2017\\04\\23\\CSS-基础.json","date":1492911579000,"path":{"year":2017,"month":4,"day":23,"name":"CSS-基础"},"title":"CSS-基础","permalink":"http://yoursite.com/2017/04/23/CSS-基础/","content":"<h2 id=\"1-CSS-简介\"><a href=\"#1-CSS-简介\" class=\"headerlink\" title=\"1. CSS 简介\"></a>1. CSS 简介</h2><ul>\n<li>CSS 指<strong>层叠样式表</strong> (Cascading Style Sheets)</li>\n<li>样式定义如何显示 HTML 元素 </li>\n<li>样式通常存储在样式表中，外部样式表通常存储在 CSS 文件中 </li>\n<li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li>\n<li>多个样式定义可层叠为一<ul>\n<li>当同一个 HTML 元素被不止一个样式定义时，多重样式将层叠为一个</li>\n<li>优先级(高到底):<ol>\n<li>内联样式（在 HTML 元素内部）</li>\n<li>内部样式表（位于 <code>&lt;head&gt;</code> 的<code>&lt;style&gt;</code>标签内部）</li>\n<li>外部样式表</li>\n<li>浏览器缺省设置</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-CSS-基础语法\"><a href=\"#2-CSS-基础语法\" class=\"headerlink\" title=\"2. CSS 基础语法\"></a>2. CSS 基础语法</h2><ul>\n<li>CSS 规则由两个主要的部分构成：<ul>\n<li>选择器</li>\n<li>一条或多条声明</li>\n</ul>\n</li>\n<li><code>selector {declaration1(property: value); declaration2; ... declarationN }</code></li>\n<li>每条声明由一个属性和一个值组成(<code>selector {property: value}</code>)</li>\n<li><img src=\"http://www.w3school.com.cn/i/ct_css_selector.gif\" alt=\"CSS语法\"></li>\n<li>如果值为若干单词，则要给值加引号(<code>p {font-family: &quot;sans serif&quot;;}</code>)</li>\n<li>CSS注释: <code>/*....*/</code></li>\n</ul>\n<h2 id=\"4-创建-CSS\"><a href=\"#4-创建-CSS\" class=\"headerlink\" title=\"4. 创建 CSS\"></a>4. 创建 CSS</h2><ul>\n<li><p>三种方式来插入样式表：</p>\n<ul>\n<li><p>外部样式表<br>当样式需要被应用到很多页面的时候，可使用外部样式表，在<code>&lt;head&gt;</code>内部通过<code>&lt;link&gt;</code>标签定义外部样式表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>内部样式表<br>当单个文件需要特别样式时，可使用内部样式表。在<code>&lt;head&gt;</code>内部通过 <code>&lt;style&gt;</code> 标签定义内部样式表。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">body &#123;background-color: red&#125;</div><div class=\"line\">p &#123;margin-left: 20px&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>内联样式<br>当特殊的样式需应用到个别元素时,可使用内联样式。即在相关的标签中使用样式属性，样式属性可以包含任何 CSS 属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p style=&quot;color: red; margin-left: 20px&quot;&gt;This is a paragraph&lt;/p&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-CSS-选择器\"><a href=\"#5-CSS-选择器\" class=\"headerlink\" title=\"5. CSS 选择器\"></a>5. CSS 选择器</h2><ol>\n<li><p>CSS 元素选择器(类型选择器)</p>\n<ul>\n<li><code>html{color:black;}</code></li>\n<li><code>h1{color:blue;}</code></li>\n<li><code>p{color:red;}</code></li>\n<li>可将任意多个选择器分组在一起(分组选择器):<code>html,h1,p{color:blue;}</code></li>\n</ul>\n</li>\n<li><p>CSS not 选择器</p>\n<ul>\n<li><code>:not(p){ background-color: #ff0000;}</code>//设置非 <code>&lt;p&gt;</code> 元素的所有元素的背景色</li>\n</ul>\n</li>\n<li><p>CSS 通配符选择器</p>\n<ul>\n<li>用一个星号(*)代表任何元素(通配符)</li>\n<li>使该选择器可与任何元素匹配</li>\n<li>例：<code>*{color:red;}</code></li>\n</ul>\n</li>\n<li><p>CSS 类选择器</p>\n<ul>\n<li>允许以一种独立于文档元素的方式来指定样式(指定哪一类元素的样式)</li>\n<li>可以单独使用，也可以与其他元素结合使用</li>\n<li>适用于应用样式而不考虑具体设计的元素的情况</li>\n<li>需对相应元素设置class值</li>\n<li>例: <code>.important{color:red;}</code>//应用于所有类名为important的元素</li>\n<li>例: <code>p.important{color:red;}</code>//应用于所有类名为important的p元素（结合元素，更进一步筛选）</li>\n<li>例: <code>.a.b{background:silver;}</code>//应用于所有含有类名a和b的元素(多类选择器，缺一不匹配)</li>\n</ul>\n</li>\n<li><p>CSS ID选择器</p>\n<ul>\n<li>允许以一种独立于文档元素的方式来指定样式(指定哪一个元素的样式)</li>\n<li>例: <code>#intro{font-weight:bold;}</code>//应用于id=”intro”的元素(元素id值唯一)</li>\n</ul>\n</li>\n<li><p>选择类选择器还是ID选择器？</p>\n<ul>\n<li>ID选择器只能用一次</li>\n<li>ID选择器不能集合使用(因id值唯一)</li>\n<li>当知道文档中会出现某个特定的id值但并不知道他会是哪个元素(p?h1?ul?)时，则使用ID选择器</li>\n<li>两者都可能区分大小写</li>\n</ul>\n</li>\n<li><p>CSS 属性选择器</p>\n<ul>\n<li>根据元素的<strong>属性</strong>选择元素<ol>\n<li><code>*[title] {color:red;}</code>//把所有带有title属性的元素变为红色</li>\n<li><code>a[href] {color:red;}</code>//对所有带有href属性的a元素应用样式</li>\n<li><code>a[href][title] {color:red;}</code>//将所有同时带有href和title属性的a元素应用样式</li>\n</ol>\n</li>\n<li>根据元素的<strong>属性值</strong>选择(属性值必须完全匹配,缺一空格都不匹配)<ol>\n<li><code>a[href=&quot;xxx.asp&quot;] {color: red;}</code>//将所有href属性值为”xxx.asp”的a元素应用样式</li>\n<li><code>a[href=&quot;xxx.asp&quot;][title=&quot;ok&quot;]{color:red;}</code>//将所有href属性值为”xxx.asp”和”title”属性值为ok的a元素应用样式(缺一不匹配)</li>\n</ol>\n</li>\n<li>根据<strong>部分属性值</strong>选择(~=)<ol>\n<li><code>p[class~=&quot;important&quot;] {color: red;}</code>//将所有class属性中包含important的元素应用样式</li>\n<li><code>[abc^=&quot;def&quot;]</code>//选择所有abc属性值以 “def” 开头的元素</li>\n<li><code>[abc$=&quot;def&quot;]</code>//选择所有abc属性值以 “def” 结尾的元素</li>\n<li><code>[abc*=&quot;def&quot;]</code>//选择所有abc属性值中包含子串 “def” 的元素</li>\n</ol>\n</li>\n<li>根据<strong>特定属性</strong>选择<ol>\n<li><code>*[lang|=&quot;en&quot;] {color: red;}</code>//选择所有lang属性 等于en 或 以”en-“(注意不是”en”)开头的元素</li>\n<li><code>p[lang|=&quot;en&quot;] {color: red;}</code>//选择所有lang属性 等于en 或 以”en-“开头 的<strong>p元素</strong></li>\n<li>常用于匹配语言值</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>CSS 后代选择器(包含选择器)</p>\n<ul>\n<li>选择作为某元素后代的元素(使某些样式在一些文档结构中起作用，另外一些不起作用)</li>\n<li><code>h1 em {color:red;}</code>//把作为h1元素后代的任何em元素的文本变红色(其他em元素的文本则不会产生效果)</li>\n<li>两个元素之间的层次间隔可以是无限的(如<code>ul em</code>,则选择继承ul元素的所有em元素而不论em的嵌套层次多深)</li>\n</ul>\n</li>\n<li><p>CSS 子元素选择器（大于号&gt;）</p>\n<ul>\n<li>如果不想选择任意的后代元素，而只希望缩小范围，只选择<strong>某个元素的直接子元素</strong>，则用子元素选择器</li>\n<li><code>h1 &gt; strong {color:red;}</code>//选择只作为 h1 元素直接子元素的 strong 元素(中间隔了一层都不行)</li>\n<li>结合后代选择器和子选择器:<br><code>table.company td &gt; p</code>//选择作为 td 元素子元素的所有 p 元素，这个 td 元素本身从 table 元素继承，该 table 元素有一个包含 company 的 class 属性</li>\n</ul>\n</li>\n<li><p>CSS 相邻兄弟选择器（加号+）</p>\n<ul>\n<li>可选择紧接在某一元素后的元素，且二者有相同父元素</li>\n<li><code>h1 + p {margin-top:50px;}</code>//将紧接在 h1 元素后出现的段落 增加上边距(h1和p都有相同父元素)</li>\n<li>用一个结合符只能选择两个相邻兄弟中的第二个元素,例:  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">li + li &#123;font-weight:bold;&#125;//只会把列表中第二个和第三个列表项变为粗体。而第一个列表项不受影响</div><div class=\"line\"> .....</div><div class=\"line\">&lt;div&gt;</div><div class=\"line\">  &lt;ul&gt;</div><div class=\"line\">      &lt;li&gt;List item 1&lt;/li&gt;</div><div class=\"line\">      &lt;li&gt;List item 2&lt;/li&gt;//加粗</div><div class=\"line\">      &lt;li&gt;List item 3&lt;/li&gt;//加粗</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">  &lt;ol&gt;</div><div class=\"line\">      &lt;li&gt;List item 1&lt;/li&gt;</div><div class=\"line\">      &lt;li&gt;List item 2&lt;/li&gt;//加粗</div><div class=\"line\">      &lt;li&gt;List item 3&lt;/li&gt;//加粗</div><div class=\"line\">  &lt;/ol&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><p><code>html &gt; body table + ul {margin-top:20px;}</code>//选择紧接在 table 元素后出现的所有兄弟 ul 元素，该 table 元素包含在一个 body 元素中，body 元素本身是 html 元素的子元素</p>\n<ol>\n<li><p>CSS 伪类 (Pseudo-classes)</p>\n<ul>\n<li>用于向某些选择器添加特殊的效果</li>\n<li>语法: <code>selector : pseudo-class {property: value}</code></li>\n<li>也可与 CSS类 搭配使用: <code>selector.class : pseudo-class {property: value}</code></li>\n<li>锚伪类</li>\n</ul>\n<ul>\n<li>在支持 CSS 的浏览器中，链接的不同状态都可以不同的方式显示</li>\n<li><p>这些状态包括：活动状态，已被访问状态，未被访问状态，和鼠标悬停状态</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">a:link &#123;color: #FF0000&#125;\t\t/* 未访问的链接 */</div><div class=\"line\">a:visited &#123;color: #00FF00&#125;\t/* 已访问的链接 */</div><div class=\"line\">a:hover &#123;color: #FF00FF&#125;\t/* 鼠标移动到链接上 */ </div><div class=\"line\">a:active &#123;color: #0000FF&#125;\t/* 选定的链接 */</div></pre></td></tr></table></figure>\n</li>\n<li><p>在 CSS 定义中，<strong>a:hover</strong> 必须被置于 <strong>a:link</strong>和<strong>a:visited</strong>之后，才是有效的;<strong>a:active</strong> 必须被置于 <strong>a:hover</strong> 之后，才是有效的.</p>\n</li>\n<li>伪类名称对大小写不敏感</li>\n<li>伪类与CSS类配合使用：/<em>若链接被访问过，那么它将显示为红色</em>/<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.red : visited &#123;color: #FF0000&#125;</div><div class=\"line\">&lt;a class=&quot;red&quot; href=&quot;css_syntax.asp&quot;&gt;CSS Syntax&lt;/a&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>:first-child 伪类(CSS2)</li>\n</ul>\n<ul>\n<li>选择某元素的第一个子元素</li>\n<li><code>p:first-child {font-weight: bold;}</code>//匹配第一个 <code>&lt;p&gt;</code> 元素 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">   &lt;p&gt;some text&lt;/p&gt;//匹配!</div><div class=\"line\">   &lt;p&gt;some text&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<pre><code>  + `p &gt; i:first-child { font-weight:bold; } `//匹配所有`&lt;p&gt;`元素中的第一个`&lt;i&gt;`元素\n     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">   &lt;p&gt;some &lt;i&gt;text&lt;/i&gt;. some &lt;i&gt;text&lt;/i&gt;.&lt;/p&gt; //只匹配前面的&lt;i&gt;元素</div><div class=\"line\">   &lt;p&gt;some &lt;i&gt;text&lt;/i&gt;. some &lt;i&gt;text&lt;/i&gt;.&lt;/p&gt; //只匹配前面的&lt;i&gt;元素</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n\n\n  + `p:first-child i { color:blue; }`//匹配所有作为第一个子元素的`&lt;p&gt;`元素中的所有`&lt;i&gt;`元素\n     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">   &lt;p&gt;some &lt;i&gt;text&lt;/i&gt;. some &lt;i&gt;text&lt;/i&gt;.&lt;/p&gt; //这一行的&lt;i&gt;元素都匹配</div><div class=\"line\">   &lt;p&gt;some &lt;i&gt;text&lt;/i&gt;. some &lt;i&gt;text&lt;/i&gt;.&lt;/p&gt; //都不匹配</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n\n\n- :lang 伪类(CSS2)  \n  + 使你有能力为不同的语言定义特殊的规则\n  + 下面的例子中，:lang 类为属性值为 no 的 q 元素定义引号的类型：\n    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">   q:lang(no)&#123;quotes: &quot;~&quot; &quot;~&quot;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">  &lt;p&gt;文字&lt;q lang=&quot;no&quot;&gt;段落中的引用的文字&lt;/q&gt;文字&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n\n     结果: `文字段落中的引用的文字文字`\n</code></pre><ol>\n<li>CSS 伪元素(Pseudo-elements)<ul>\n<li>用于向某些选择器设置特殊效果</li>\n<li>语法: <code>selector:pseudo-element {property:value;}</code></li>\n<li>:first-line 伪元素<ul>\n<li>用于向文本的<strong>首行</strong>设置特殊样式</li>\n<li>只能用于块级元素</li>\n<li><code>p:first-line { color:#ff0000; font-variant:small-caps; }</code>//对p元素的第一行文本进行格式化</li>\n</ul>\n</li>\n<li>:first-letter 伪元素<ul>\n<li>用于向文本的<strong>首字母</strong>设置特殊样式</li>\n<li>只能用于块级元素</li>\n<li><code>p:first-letter { color:#ff0000; font-size:xx-large; }</code>//对p元素的第一个字母进行格式化</li>\n</ul>\n</li>\n<li>伪元素 与 CSS 类配合使用<ul>\n<li>语法: <code>selector.class:pseudo-element {property:value;}</code></li>\n<li>例:<br>使所有 class 为 article 的段落的首字母变为红色<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">p.article:first-letter &#123; color: #FF0000; &#125;</div><div class=\"line\">&lt;p class=&quot;article&quot;&gt;This is a paragraph in an article。&lt;/p&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<pre><code>- 可结合多个伪元素来使用（即多重伪元素）\n- :before 伪元素(CSS2)\n  + 可在元素的内容前面插入新内容\n  + `h1:before { content:url(logo.gif); }`//在每个 `&lt;h1&gt; `元素前面插入一幅图片\n- :after  伪元素(CSS2)\n  + 可在元素的内容之后插入新内容\n  + `h1:after { content:url(logo.gif); }`//在每个 `&lt;h1&gt; `元素后面插入一幅图片\n</code></pre><h2 id=\"6-CSS-背景\"><a href=\"#6-CSS-背景\" class=\"headerlink\" title=\"6. CSS 背景\"></a>6. CSS 背景</h2><ol>\n<li><p>背景色</p>\n<ul>\n<li>使用 background-color 属性(这个属性接受任何合法的颜色值)</li>\n<li><code>p {background-color: gray;}</code>//把元素的背景设置为灰色</li>\n<li>background-color 不能继承，其默认值是transparent（即如果一个元素没有指定背景色，那么背景就是透明的，这样其祖先元素的背景才能可见）</li>\n</ul>\n</li>\n<li><p>背景图像</p>\n<ul>\n<li>使用 background-image 属性</li>\n<li>默认值为none(表示背景上没任何图像)</li>\n<li>如需设置一个背景图像，须为这个属性设置一个 URL 值</li>\n<li>例: <code>body {background-image: url(/i/eg_bg_04.gif);}</code></li>\n<li>background-image 也不能继承。(事实上，所有背景属性都不能继承)</li>\n</ul>\n</li>\n<li><p>背景重复(平铺)</p>\n<ul>\n<li>使用 background-repeat 属性</li>\n<li>属性值 <ul>\n<li>repeat 图像在水平垂直方向上都平铺</li>\n<li>repeat-x 图像在水平方向上重复</li>\n<li>repeat-y 图像在垂直方向上重复</li>\n<li>no-repeat 不允许图像在任何方向上平铺</li>\n</ul>\n</li>\n<li>默认地，背景图像将从一个元素的<strong>左上角</strong>开始</li>\n</ul>\n</li>\n<li><p>背景定位</p>\n<ul>\n<li>使用 background-position 属性</li>\n<li>属性值 <ul>\n<li>关键字: top、bottom、left、right、两个(水平方向一个加垂直方向一个)、center</li>\n<li>百分比: <ol>\n<li>默认值为0% 0%(即top left)</li>\n<li>只写一个值时，会默认当作水平值，而垂直值默认为50%</li>\n<li>百分数值同时应用于元素和图像</li>\n<li>图像中描述为 50% 50% 的点（中心点）与元素中描述为50% 50%的点（中心点）对齐；如果图像位于 0% 0%，其左上角将放在元素内边距区的左上角；如图像位置是100% 100%，会使图像的右下角放在右边距的右下角。</li>\n</ol>\n</li>\n<li>长度值<ol>\n<li>元素内边距区左上角的偏移(偏移点是图像的左上角)</li>\n<li>例: <code>background-position:50px 100px;</code>//图像的左上角将定位在元素内边距区左上角向右 50 像素、向下 100 像素的位置上</li>\n<li>与百分数值不同，偏移只是从一个左上角到另一个左上角(图像的左上角与 background-position 声明中的指定的点对齐)</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>背景关联</p>\n<ul>\n<li>background-attachment 属性 </li>\n<li>通过这个属性，可以声明图像相对于可视区是固定的（fixed），防止当文档滚动到超过背景图像的位置时，随着滚动的背景图像就会消失的现象</li>\n<li>属性值<ul>\n<li>scroll(默认值): 背景会随文档滚动</li>\n<li>fixed : 固定 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"7-CSS-文本\"><a href=\"#7-CSS-文本\" class=\"headerlink\" title=\"7. CSS 文本\"></a>7. CSS 文本</h2><ol>\n<li>缩进文本<ul>\n<li>text-indent 属性</li>\n<li>实现文本缩进(常用于段落的首行缩进)</li>\n<li>一般来说，可应用于所有块级元素，但无法应用于行内元素，以及图像之类的替换元素。(若想把一个行内元素的首行“缩进”，可以用<strong>左内边距或外边距</strong>创造这种效果)</li>\n<li>不过如果一个块级元素（比如段落）的首行中有一个图像，它会随该行的其余文本移动。</li>\n<li>属性值: 可使用所有长度单位，如<strong>长度、百分值</strong>(可为负值)<br>例: <code>p {text-indent: 5em;}</code>//使所有段落的首行缩进 5 em<br>例: <code>p {text-indent: -5em;}</code>//使所有段落的首行悬挂在元素中余下部分的左边(“悬挂缩进”)<br>例: <code>p {text-indent:-5em;padding-left:5em;}</code>//使用负值，首行的某些文本可能会超出浏览器窗口的左边界。为避免出现这种显示问题，可针对负缩进再设置一个外边距或一些内边距<br>例: <code>p {text-indent: 20%;}</code>//缩进其父元素宽度的 20%</li>\n<li>text-indent 属性可以继承，即设置了缩进元素所包括(派生)的所有子元素也相应缩进</li>\n</ul>\n</li>\n<li>水平对齐<ul>\n<li>text-align 属性</li>\n<li>属性值: <ul>\n<li>left - 左对齐 </li>\n<li>right - 右对齐</li>\n<li>center - 内容居中，元素不居中（与<code>&lt;center&gt;</code>的区别）</li>\n<li>justify - 两端对齐(文本行的左右两端都放在父元素的内边界上,调整单词和字母间的间隔，使各行的长度恰好相等)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>字间隔<ul>\n<li>word-spacing 属性</li>\n<li>改变<strong>字（单词）之间</strong>的标准间隔</li>\n<li>属性值: <ul>\n<li>normal或0: 默认值</li>\n<li>正长度值: 30px或0.5em</li>\n<li>负长度值: -30px或-0.5em</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>字母间隔<ul>\n<li>letter-spacing 属性</li>\n<li>改变<strong>字符或字母之间</strong>的间隔</li>\n<li>属性值: <ul>\n<li>normal或0: 默认值</li>\n<li>正长度值: 30px或0.5em</li>\n<li>负长度值: -30px或-0.5em</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>字符转换<ul>\n<li>text-transform 属性</li>\n<li>处理文本的大小写</li>\n<li>属性值: <ul>\n<li>none: 默认值</li>\n<li>uppercase: 大写</li>\n<li>lowercase: 小写</li>\n<li>capitalize: 首字母大写</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>文本装饰<ul>\n<li>text-decoration 属性</li>\n<li>属性值: (可组合使用)<ul>\n<li>none: 默认值</li>\n<li>underline: 下划线</li>\n<li>overline: 上划线</li>\n<li>line-through: 贯穿线</li>\n<li>blink: 闪烁</li>\n<li>可组合使用，但当两个不同的装饰都与同一元素匹配时，优先级较高的值会完全取代较低的值(而不是积累起来)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>空白符处理<ul>\n<li>white-space 属性</li>\n<li>属性值<ul>\n<li>normal(默认)：忽略多余的空白符(回车、空格)</li>\n<li>pre: 不忽略多余的空白符(类似于<code>&lt;pre&gt;</code>)</li>\n<li>nowrap: 防止换行(除非用<code>&lt;br/&gt;</code>)</li>\n<li>pre-wrap</li>\n<li>pre-line</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>文本方向<ul>\n<li>direction 属性</li>\n<li>属性值:<ul>\n<li>ltr: 左到右</li>\n<li>rtl: 右到左</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"8-CSS-字体\"><a href=\"#8-CSS-字体\" class=\"headerlink\" title=\"8. CSS 字体\"></a>8. CSS 字体</h2><ol>\n<li>CSS 字体系列<ul>\n<li>通用字体系列 - 拥有相似外观的字体系统组合（比如 “Serif” 或 “Monospace”）</li>\n<li>特定字体系列 - 具体的字体系列（比如 “Times” 或 “Courier”）</li>\n</ul>\n</li>\n<li>指定字体系列<ul>\n<li>font-family 属性 </li>\n<li>取值: 字体系列名 / 具体某个特定字体名 / 多个组合(若包括空格，要加引号)</li>\n</ul>\n</li>\n<li>字体风格<ul>\n<li>font-style 属性</li>\n<li>取值: normal / italic(文本斜体显示) / oblique(文本倾斜显示)</li>\n</ul>\n</li>\n<li>字体变形<ul>\n<li>font-variant 属性</li>\n<li>设定小型大写字母</li>\n<li>例： <code>p {font-variant:small-caps;}</code></li>\n</ul>\n</li>\n<li>字体加粗<ul>\n<li>font-weight 属性</li>\n<li>设置文本的粗细</li>\n<li>取值: 100-900代表1到9级(normal为400，bold为700)</li>\n</ul>\n</li>\n<li>字体大小<ul>\n<li>font-size 属性</li>\n<li>设置文本的大小</li>\n<li>取值:<ul>\n<li>绝对值：<ol>\n<li>将文本设置为指定的大小</li>\n<li>不允许用户在所有浏览器中改变文本大小（不利于可用性）</li>\n<li>绝对大小在确定了输出的物理尺寸时很有用</li>\n</ol>\n</li>\n<li>相对大小：<ol>\n<li>相对于周围的元素来设置大小</li>\n<li>允许用户在浏览器改变文本大小</li>\n</ol>\n</li>\n<li>普通文本(如段落)的默认大小为16px(1em)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"9-CSS-列表\"><a href=\"#9-CSS-列表\" class=\"headerlink\" title=\"9. CSS 列表\"></a>9. CSS 列表</h2><ul>\n<li>主要是改变列表的标志类型(无序列表的标志是圆点；有序列表的是字母，数字等)</li>\n<li>例：<ul>\n<li><code>ul {list-style-type : square}</code> // 把无序列表中的列表项标志设置为方块</li>\n<li><code>ul li {list-style-image : url(xxx.gif)}</code> // 使用图像作为标志</li>\n<li><code>li {list-style-position : inside/outside}</code>//设置标志出现在列表项内还是外</li>\n<li><code>li {list-style : url(example.gif) square inside}</code>//上述设置组合</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-CSS-表格\"><a href=\"#10-CSS-表格\" class=\"headerlink\" title=\"10. CSS 表格\"></a>10. CSS 表格</h2><ol>\n<li>表格边框(双线)<ul>\n<li>border 属性</li>\n<li><code>table, th, td { border: 1px solid blue; }</code> //为 table、th 以及 td 设置了蓝色边框</li>\n</ul>\n</li>\n<li>折叠边框(单线)<ul>\n<li>border-collapse 属性</li>\n<li>设置是否将表格边框折叠为单一边框</li>\n<li>例:<br><code>table { border-collapse:collapse; }</code><br><code>table,th,td { border: 1px solid black; }</code></li>\n</ul>\n</li>\n<li>表格宽度和高度<ul>\n<li>width 和 height 属性</li>\n<li>取值: 长度值或百分比</li>\n</ul>\n</li>\n<li>表格文本对齐<ul>\n<li>text-align： 水平对齐方式(取值: left、center、right) </li>\n<li>vertical-align：垂直对齐方式(取值: top、center、bottom)</li>\n</ul>\n</li>\n<li>表格内边距<ul>\n<li>padding 属性</li>\n<li><code>td { padding:15px; }</code></li>\n</ul>\n</li>\n<li>表格颜色<ul>\n<li><code>table, td, th { border:1px solid green; }</code>//设置<strong>边框</strong>的颜色</li>\n<li><code>th { background-color:green; color:white; }</code>//设置 th 元素的<strong>文本和背景</strong>颜色</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"11-CSS-轮廓\"><a href=\"#11-CSS-轮廓\" class=\"headerlink\" title=\"11. CSS 轮廓\"></a>11. CSS 轮廓</h2><ul>\n<li>轮廓（outline）: 绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用</li>\n<li>属性：<ul>\n<li><code>outline</code>       在一个声明中设置所有的轮廓属性</li>\n<li><code>outline-color</code> 设置轮廓的颜色</li>\n<li><code>outline-style</code> 设置轮廓的样式</li>\n<li><code>outline-width</code> 设置轮廓的宽度</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-CSS-滤镜\"><a href=\"#12-CSS-滤镜\" class=\"headerlink\" title=\"12. CSS 滤镜\"></a>12. CSS 滤镜</h2><ul>\n<li><code>...{ filter:滤镜名称(设置值) }</code></li>\n</ul>\n<h2 id=\"13-CSS-框模型\"><a href=\"#13-CSS-框模型\" class=\"headerlink\" title=\"13. CSS 框模型\"></a>13. CSS 框模型</h2><ol>\n<li><p>框模型概述</p>\n<ul>\n<li>CSS 框模型 (Box Model) 规定了元素框处理元素内容、内边距、边框 和 外边距 的方式</li>\n<li><img src=\"http://www.w3school.com.cn/i/ct_boxmodel.gif\" alt=\"框模型\"></li>\n<li>元素框的最内部分是实际的内容，直接包围内容的是内边距</li>\n<li>内边距呈现了元素的背景</li>\n<li>内边距的边缘是边框</li>\n<li>边框以外是外边距</li>\n<li>外边距默认是透明的，不会遮挡其后的任何元素。(外边距可为负值，且在很多情况下都要使用负值的外边距)</li>\n<li>背景应用于由内容和内边距、边框组成的区域</li>\n<li>内边距、边框和外边距都是可选的，默认值是零</li>\n<li>内边距、边框和外边距可以应用于一个元素的所有边，也可以应用于单独的边</li>\n<li>可通过<code>* { margin: 0; padding: 0; }</code>来覆盖之前设置的内边距外边距样式</li>\n<li>浏览器兼容性<blockquote>\n<p>一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。<br>虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>CSS 内边距(padding)</p>\n<ul>\n<li>元素的内边距在边框和内容区之间</li>\n<li>padding 属性</li>\n<li>取值: 长度值/百分比(相对于其父元素的width计算),但<strong>不接受负值</strong></li>\n<li>例:<ul>\n<li><code>h1 {padding: 10px;}</code>//设置所有 h1 元素的各边都有 10 像素的内边距</li>\n<li><code>h1 {padding: 10px 0.25em 2ex 20%;}</code>//从顺时针分别设置</li>\n<li><code>h1 {padding-top: 10px; padding-right: 0.25em; padding-bottom: 2ex; padding-left: 20%;}</code>//同上</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>CSS 边框(border)</p>\n<ul>\n<li>元素的边框: 围绕元素内容和内边距的一/多条线</li>\n<li>边框与背景<blockquote>\n<p>CSS 规范指出，边框绘制在“元素的背景之上”。这很重要，因为有些边框是“间断的”（例如，点线边框或虚线框），元素的背景应当出现在边框的可见部分之间。<br> CSS2 指出背景只延伸到内边距，而不是边框。后来CSS2.1进行了更正：元素的背景是内容、内边距和边框区的背景。大多数浏览器都遵循 CSS2.1 定义，不过一些较老的浏览器可能会有不同的表现。</p>\n</blockquote>\n</li>\n<li>边框的样式<ul>\n<li>如果希望显示某种边框，就必须设置边框样式</li>\n<li>border-style 属性(border-top-style、border-right-style、border-bottom-style、border-left-style)</li>\n<li>取值: <ol>\n<li>solid 实线</li>\n<li>dotted 点线</li>\n<li>dashed 虚线</li>\n<li>double 双线</li>\n<li>outset 凸起按钮</li>\n<li>none </li>\n</ol>\n</li>\n<li>例: <ol>\n<li><code>a:link img {border-style:outset;}</code>//把一幅图片的边框定义为outset，使之看上去像“凸起按钮”</li>\n<li><code>p.aside {border-style: solid dotted dashed double;}</code>//为一个边框定义多个样式 </li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>边框的宽度</p>\n<ul>\n<li>border-width 属性(border-top-width、border-right-width、border-bottom-width、border-left-width)</li>\n<li>取值: <ol>\n<li>长度值: px、em</li>\n<li>关键字: thin 、medium（默认值）和 thick (CSS没有定义3个关键字的具体宽度，根据用户代理设置值不同而不同)</li>\n</ol>\n</li>\n<li>例: <ol>\n<li><code>p {border-style: solid; border-width: 15px 5px 15px 5px;}</code>//分别设置元素的各边边框</li>\n<li><code>p {border-style: solid; border-width: 15px 5px;}</code>//另一种写法</li>\n</ol>\n</li>\n<li>由于 border-style 的默认值是 none，如果没有声明边框样式，就相当于 border-style: none。因此，如果您希望边框出现，就必须声明一个边框样式。</li>\n</ul>\n</li>\n<li><p>边框的颜色</p>\n<ul>\n<li>border-color 属性(border-top-color、border-right-color、border-bottom-color、border-left-color)</li>\n<li>取值: 任何类型的颜色值(命名颜色、十六进制和 RGB 值）</li>\n<li><blockquote>\n<p>默认的边框颜色是元素本身的前景色。如果没有为边框声明颜色，它将与元素的文本颜色相同。另一方面，如果元素没有任何文本，假设它是一个表格，其中只包含图像，那么该表的边框颜色就是其父元素的文本颜色（因为 color 可以继承）。这个父元素很可能是 body、div 或另一个 table。</p>\n</blockquote>\n</li>\n<li><p>例: </p>\n<ol>\n<li><code>p { border-style: solid; border-color: blue rgb(25%,35%,45%) #909090 red; }</code></li>\n<li><code>h1 { border-style: solid; border-color: black; border-right-color: red; }</code></li>\n<li><code>border-color: transparent;</code>//透明边框</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>CSS 外边距(margin)</p>\n<ul>\n<li>外边距：围绕在元素边框外的空白区域</li>\n<li>设置外边距会在元素外创建额外的“空白”</li>\n<li>margin 属性(margin-top、margin-right、margin-bottom、margin-left)</li>\n<li>取值: 长度值/百分比(相对于其父元素的width计算) / auto / 0(默认值)</li>\n<li>例: <code>h1 {margin : 10px 0px 15px 5px;}</code></li>\n<li><a href=\"http://www.w3school.com.cn/css/css_margin_collapsing.asp\" target=\"_blank\" rel=\"external\">外边距合并</a><ul>\n<li>指 当两个垂直外边距相遇时，将形成一个外边距</li>\n<li>合并后的外边距的高度 = 两个发生合并的外边距的高度中的较大者</li>\n<li>行内框、浮动框和绝对定位间外边距 不会合并</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"14-CSS-尺寸\"><a href=\"#14-CSS-尺寸\" class=\"headerlink\" title=\"14. CSS 尺寸\"></a>14. CSS 尺寸</h2><ul>\n<li>CSS尺寸属性允许你控制元素的高度和宽度，也允许增加行间距</li>\n<li>属性：<ul>\n<li>height： 设置元素高度</li>\n<li>width ：设置元素宽度</li>\n<li>max/min height：设置最大/最小高度</li>\n<li>max/min width： 设置最大/最小宽度</li>\n<li>line-height：设置行间距</li>\n</ul>\n</li>\n<li>取值：像素值(px)/百分比（行间距还可以设置数值）</li>\n</ul>\n<h2 id=\"15-CSS-分类属性\"><a href=\"#15-CSS-分类属性\" class=\"headerlink\" title=\"15. CSS 分类属性\"></a>15. CSS 分类属性</h2><ul>\n<li>规定如何以及在何处显示元素</li>\n<li>属性：<ol>\n<li>clear<ul>\n<li>设置一个元素的侧面是否允许其他的浮动元素</li>\n<li>none(都允许)(默认)|left(左侧不允许)|right(右侧不允许)|both(都不允许)|inherit(从父元素继承clear属性值)</li>\n</ul>\n</li>\n<li>cursor<ul>\n<li>规定当指向某元素之上时显示的指针类型(形状)</li>\n<li>auto|default|url|..</li>\n</ul>\n</li>\n<li>display<ul>\n<li>设置是否以及如何显示元素</li>\n<li>none(不显示)|block(块级元素)|inline(内联元素)|….</li>\n</ul>\n</li>\n<li>float<ul>\n<li>定义元素向哪个方向浮动</li>\n<li>left|right|none(默认)|inherit</li>\n</ul>\n</li>\n<li>position<ul>\n<li>把元素放置到一个 静态/相对/绝对/固定 位置中</li>\n<li>absolute|fixed|relative|static(默认)|inherit</li>\n</ul>\n</li>\n<li>visibility<ul>\n<li>设置元素是否可见/不可见</li>\n<li>visible(默认)|hidden|collapse(表格)|inherit</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"16-CSS-导航栏\"><a href=\"#16-CSS-导航栏\" class=\"headerlink\" title=\"16. CSS 导航栏\"></a>16. CSS 导航栏</h2><ul>\n<li>导航栏 = 链接列表</li>\n<li><p>垂直导航栏</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">/***************************实现导航栏标准代码****************************************/</div><div class=\"line\">ul&#123; </div><div class=\"line\">   list-style-type:none;/*删除圆点*/</div><div class=\"line\">   margin:0;/*把外边距和内边距设置为 0 可以去除浏览器的默认设定*/</div><div class=\"line\">   padding:0;</div><div class=\"line\">&#125;</div><div class=\"line\">a&#123;</div><div class=\"line\">   display:block;/*把链接显示为块元素可使整个链接区域可点击(不仅仅是文本)，同时也允许我们规定宽度*/</div><div class=\"line\">   width:60px; /*块元素默认占用全部可用宽度。我们根据需要规定像素的宽度*/</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">....</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#home&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#news&quot;&gt;News&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">.....</div></pre></td></tr></table></figure>\n</li>\n<li><p>水平导航栏</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">/***************************实现导航栏标准代码****************************************/</div><div class=\"line\">ul&#123; </div><div class=\"line\">   list-style-type:none;/*删除圆点*/</div><div class=\"line\">   margin:0;/*把外边距和内边距设置为 0 可以去除浏览器的默认设定*/</div><div class=\"line\">   padding:0;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">/***************************行内列表项(选项宽度不等)*********************************/</div><div class=\"line\">li&#123;</div><div class=\"line\">   display:inline;/*&lt;li&gt;元素是默认块元素。去除每个列表项前后的换行以让它们在一行中显示*/</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">/***************************对列表项浮动(选项宽度相等)*********************************/</div><div class=\"line\">li&#123;  float:left;  &#125;</div><div class=\"line\">a&#123;  display:block;  width:60px;&#125;</div><div class=\"line\"></div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">....</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#home&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#news&quot;&gt;News&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">   &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">....</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"17-CSS-图像透明\"><a href=\"#17-CSS-图像透明\" class=\"headerlink\" title=\"17. CSS 图像透明\"></a>17. CSS 图像透明</h2><ul>\n<li>创建透明图像<ul>\n<li>opacity ：0.0~1.0(越小越透明) ———CSS标准</li>\n<li>filter：alpha(opacity=x)： 0~100(越小越透明) ————–IE8及更早版本</li>\n</ul>\n</li>\n<li>图像透明度<ul>\n<li>实现：当鼠标指针移出图像后，图像会再次透明<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">img&#123;</div><div class=\"line\">   opacity:0.4;  /* CSS3 standard */</div><div class=\"line\">   filter:alpha(opacity=40); /* 针对 IE8 以及更早的版本 */</div><div class=\"line\">&#125;</div><div class=\"line\">img:hover&#123;</div><div class=\"line\">   opacity:1.0;   /* CSS3 standard */</div><div class=\"line\">   filter:alpha(opacity=100); /* 针对 IE8 以及更早的版本 */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"18-CSS2-媒介类型-Media-Types\"><a href=\"#18-CSS2-媒介类型-Media-Types\" class=\"headerlink\" title=\"18. CSS2 媒介类型(Media Types)\"></a>18. CSS2 媒介类型(Media Types)</h2><ul>\n<li>媒介类型允许你定义以何种媒介来提交文档。</li>\n<li>文档可以被显示在显示器、纸媒介或者听觉浏览器等等<blockquote>\n<p>某些 CSS 属性仅仅被设计为针对某些媒介</p>\n<ul>\n<li>“voice-family” 属性被设计为针对听觉用户终端，其他的属性可被用于不同的媒介</li>\n<li>“font-size” 属性可被用于显示器以及印刷媒介，但是也许会带有不同的值。</li>\n<li>显示器上面的显示的文档通常会需要比纸媒介文档更大的字号，同时，在显示器上，sans-serif 字体更易阅读，而在纸媒介上，serif 字体更易阅读</li>\n</ul>\n</blockquote>\n</li>\n<li><p>@media规则</p>\n<ul>\n<li>@media 规则使你有能力在相同的样式表中，使用不同的样式规则来针对不同的媒介</li>\n<li>例子:此例样式告知浏览器在显示器上显示 14 像素的 Verdana 字体。但是假如页面需要被打印，将使用 10 个像素的 Times 字体。注意：font-weight 被设置为粗体，不论显示器还是纸媒介<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">@media screen&#123;  p.test &#123;font-family:verdana,sans-serif; font-size:14px&#125;   &#125; /*显示器上显示*/</div><div class=\"line\">@media print&#123;  p.test &#123;font-family:times,serif; font-size:10px&#125;  &#125; /*打印*/</div><div class=\"line\">@media screen,print&#123;  p.test &#123;font-weight:bold&#125;  &#125; /*不论显示器还是纸媒介*/</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;....&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>不同的媒介类型(媒介类型名称对大小写不敏感)</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">媒介类型</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">all</td>\n<td style=\"text-align:center\">用于所有的媒介设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">aural</td>\n<td style=\"text-align:center\">用于语音和音频合成器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">braille</td>\n<td style=\"text-align:center\">用于盲人用点字法触觉回馈设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">embossed</td>\n<td style=\"text-align:center\">用于分页的盲人用点字法打印机</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">handheld</td>\n<td style=\"text-align:center\">用于小的手持的设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">print</td>\n<td style=\"text-align:center\">用于打印机</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">projection</td>\n<td style=\"text-align:center\">用于方案展示，比如幻灯片</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">screen</td>\n<td style=\"text-align:center\">用于电脑显示器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tty</td>\n<td style=\"text-align:center\">用于使用固定密度字母栅格的媒介，比如电传打字机和终端</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tv</td>\n<td style=\"text-align:center\">用于电视机类型的设备</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"19-CSS-注意事项\"><a href=\"#19-CSS-注意事项\" class=\"headerlink\" title=\"19. CSS 注意事项\"></a>19. CSS 注意事项</h2><ul>\n<li><a href=\"http://www.w3school.com.cn/css/css_dont.asp\" target=\"_blank\" rel=\"external\">Internet Explorer Behaviors</a></li>\n</ul>\n"}